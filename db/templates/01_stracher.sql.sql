-- Active: 1746715703285@@localhost@5432@test@public
CREATE TYPE user_role AS ENUM ('Admin', 'Doctor', 'Patient');

-- Generated by the database client.
CREATE TABLE users(
    id SERIAL NOT NULL,
    name varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    email_verified_at timestamp without time zone,
    profile_image TEXT DEFAULT NULL,
    password varchar(255) NOT NULL,
    remember_token varchar(100),
    role user_role NOT NULL DEFAULT 'Patient',
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX users_email_unique ON public.users USING btree (email);

-- Generated by the database client.
CREATE TABLE sessions(
    id varchar(255) NOT NULL,
    user_id bigint,
    ip_address varchar(45),
    user_agent text,
    payload text NOT NULL,
    last_activity integer NOT NULL,
    PRIMARY KEY(id)
);
CREATE INDEX sessions_user_id_index ON public.sessions USING btree (user_id);
CREATE INDEX sessions_last_activity_index ON public.sessions USING btree (last_activity);

-- Generated by the database client.
CREATE TABLE password_reset_tokens(
    email varchar(255) NOT NULL,
    token varchar(255) NOT NULL,
    created_at timestamp without time zone,
    PRIMARY KEY(email)
);

-- Generated by the database client.
CREATE TABLE migrations(
    id SERIAL NOT NULL,
    migration varchar(255) NOT NULL,
    batch integer NOT NULL,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE jobs(
    id SERIAL NOT NULL,
    queue varchar(255) NOT NULL,
    payload text NOT NULL,
    attempts smallint NOT NULL,
    reserved_at integer,
    available_at integer NOT NULL,
    created_at integer NOT NULL,
    PRIMARY KEY(id)
);
CREATE INDEX jobs_queue_index ON public.jobs USING btree (queue);

-- Generated by the database client.
CREATE TABLE job_batches(
    id varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    total_jobs integer NOT NULL,
    pending_jobs integer NOT NULL,
    failed_jobs integer NOT NULL,
    failed_job_ids text NOT NULL,
    options text,
    cancelled_at integer,
    created_at integer NOT NULL,
    finished_at integer,
    PRIMARY KEY(id)
);

-- Generated by the database client.
CREATE TABLE failed_jobs(
    id SERIAL NOT NULL,
    uuid varchar(255) NOT NULL,
    connection text NOT NULL,
    queue text NOT NULL,
    payload text NOT NULL,
    exception text NOT NULL,
    failed_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX failed_jobs_uuid_unique ON public.failed_jobs USING btree (uuid);

-- Generated by the database client.
CREATE TABLE cache_locks(
    "key" varchar(255) NOT NULL,
    owner varchar(255) NOT NULL,
    expiration integer NOT NULL,
    PRIMARY KEY(key)
);

-- Generated by the database client.
CREATE TABLE cache(
    "key" varchar(255) NOT NULL,
    "value" text NOT NULL,
    expiration integer NOT NULL,
    PRIMARY KEY(key)
);

CREATE TABLE doctors(
    id SERIAL NOT NULL,
    user_id SERIAL NOT NULL,
    verified_degree BOOLEAN DEFAULT false,
    specialty VARCHAR(255) NOT NULL,
    job_started DATE NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    PRIMARY KEY(id),
    FOREIGN KEY(user_id) REFERENCES users(id)
);
CREATE UNIQUE INDEX doctors_email_unique ON public.doctors USING btree (email);

-- Doctor Work Schedule
CREATE TABLE work_schedule(
    id SERIAL NOT NULL,
    doctor_id SERIAL NOT NULL,
    day VARCHAR(255) NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    break_start TIME DEFAULT NULL,
    break_end TIME DEFAULT NULL,
    enabled BOOLEAN DEFAULT true,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    PRIMARY KEY(id),
    FOREIGN KEY(doctor_id) REFERENCES doctors(id)
);

-- Booking Table
CREATE TABLE appointments_booking (
    id SERIAL NOT NULL,
    user_id SERIAL NOT NULL,
    doctor_id SERIAL NOT NULL,
    doctor_user_id SERIAL NOT NULL,
    date DATE NOT NULL,
    booking_time TIME NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    PRIMARY KEY(id),
    FOREIGN KEY(user_id) REFERENCES users(id),
    FOREIGN KEY(doctor_id) REFERENCES doctors(id),
    FOREIGN KEY(doctor_user_id) REFERENCES users(id)
);

-- Generated by the database client.
CREATE TABLE notifications(
    id uuid NOT NULL,
    "type" varchar(255) NOT NULL,
    notifiable_type varchar(255) NOT NULL,
    notifiable_id bigint NOT NULL,
    "data" text NOT NULL,
    read_at timestamp without time zone,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    PRIMARY KEY(id)
);
CREATE INDEX notifications_notifiable_type_notifiable_id_index ON public.notifications USING btree (notifiable_type, notifiable_id);